version: '3'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}
  local_redis_data: {}

services:
  django:{% if cookiecutter.use_celery == 'y' %} &django{% endif %}
    build:
      context: .
      dockerfile: ./docker/django/Dockerfile
      args:
        environment: local
        cmd: /django.local
    image: {{ cookiecutter.project_slug }}_local_django
    depends_on:
      - postgres
      {%- if cookiecutter.use_mailhog == 'y' %}
      - mailhog
      {%- endif %}
    volumes:
      - .:/app
    env_file:
      - ./.envs/.django.local
      - ./.envs/.postgres.local
    ports:
      - "8000:8000"
    command: /django.local
  {%- if cookiecutter.use_celery == 'y' %}

  celeryworker:
    <<: *django
    image: {{ cookiecutter.project_slug }}_local_celeryworker
    depends_on:
      - redis
      - postgres
      {% if cookiecutter.use_mailhog == 'y' -%}
      - mailhog
      {%- endif %}
    ports: []
    command: /celeryworker

  celerybeat:
    <<: *django
    image: {{ cookiecutter.project_slug }}_local_celerybeat
    depends_on:
      - redis
      - postgres
      {% if cookiecutter.use_mailhog == 'y' -%}
      - mailhog
      {%- endif %}
    ports: []
    user: root  # TODO: a workaround allowing the container to write to the mounted directory -- fix
    command: /celerybeat

  flower:
    <<: *django
    image: {{ cookiecutter.project_slug }}_local_flower
    ports:
      - "5555:5555"
    command: /flower

  redis:
    build: ./docker/redis/
    volumes:
      - local_redis_data:/data

  {%- endif %}
  postgres:
    build:  ./docker/postgres/
    image: {{ cookiecutter.project_slug }}_production_postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.postgres.local
  {%- if cookiecutter.use_mailhog == 'y' %}

  mailhog:
    build:  ./docker/mailhog/
    ports:
      - "8025:8025"

  {%- endif %}
